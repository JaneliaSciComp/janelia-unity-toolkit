<html>
  <head>
    <HTA:APPLICATION ID='oHTA' MAXIMIZEBUTTON='no' MINIMIZEBUTTON='no'/>
  </head>
  <body scroll='no'>
    <form id='MAIN' name='radioForm' onSubmit='OnSubmit(); return false'>
      <div>
        <label>
          <input type='radio' name='radios' id='0' checked='checked' />
          Add log header notes for a new session (line breaks become spaces)
        </label>
        <div style='padding-left:30px'>
          <textarea id='id_textareaLogHeader' rows='10' style='width:99%; overflow-y: scroll'></textarea>
        </div>
      </div>
      <div>
        <label>
          <input type='radio' name='radios' id='1' />
          Omit the log header for the new session
        </label>
      </div>
      PLUGIN_RADIO_BUTTONS
      PLUGIN_OTHER_UI
      <div>
        <label for='id_logFilenameExtra'>Extra text in the log filename (spaces removed):</label>
        <input type='text' id='id_logFilenameExtra' size='45'>
      </div>
      <div>
        <label for='id_checkboxSaveFrames'>Save frames in the log directory</label>
        <input type='checkbox' id='id_checkboxSaveFrames' style='width:40px; height:40px;'>
        <label for='id_checkboxShowFrameNumbers'>Show frame numbers</label>
        <input type='checkbox' id='id_checkboxShowFrameNumbers' checked style='width:40px; height:40px;'>
        <label for='id_periodSaveFrames'>Save every N frames</label>
        <input type='number' id='id_periodSaveFrames' size='3' min='1' max='9999' value='1'>
        <label for='id_heightSaveFrames'>Downsampled height</label>
        <input type='number' id='id_heightSaveFrames' size='3' min='1' max='9999'>
      </div>
      <div>
        <input type='submit' value='Continue' />
        <input type='button' value='Cancel' onClick='self.close()' />
      </div>
    </form>
    <script language='javascript'>
      var m = document.getElementById('MAIN');
      var h = m.offsetHeight + 110;
      window.resizeTo(1000, h);
      window.focus();
      function OnSubmit(event)
      {
        var r = document.forms.radioForm.radios;
        if (r[0].checked)
          action0();
        else if (r[1].checked)
          action1();
        CALL_PLUGIN_FUNCTIONS
        self.close();
      }
      function runApp(extraArgs, useShortcut)
      {
        if (typeof useShortcut === 'undefined') {
          useShortcut = true;
        }
        var args = extraArgs ? extraArgs : '';
        CALL_PLUGIN_OTHER_FUNCTIONS
        var filenameExtra = document.getElementById('id_logFilenameExtra');
        if (filenameExtra.value) {
          var value = filenameExtra.value.replace(' ', '');
          args += " -logFilenameExtra " + value;
        }
        var checkboxSaveFrames = document.getElementById('id_checkboxSaveFrames');
        if (checkboxSaveFrames.checked) {
          args += " -saveFrames ";
          var period = document.getElementById('id_periodSaveFrames');
          args += period.value;
          var checkboxShowFrameNumbers = document.getElementById('id_checkboxShowFrameNumbers');
          if (checkboxShowFrameNumbers.checked) {
            args += " -numbers"
          }
          var height = document.getElementById('id_heightSaveFrames');
          if (height.value > 0) {
            args += " -height "
            args += height.value;
          }
        }

        var sh = new ActiveXObject('Shell.Application');
        var exe = 'STANDALONE_PATH';
        if (useShortcut) {
          exe = 'SHORTCUT_PATH';
        }
        sh.ShellExecute(exe, args, '', 'open', '1');
      }
    </script>
    <script language='javascript'>
      function LogDir()
      {
        var o = new ActiveXObject('WScript.Shell');
        if (o) {
          var appData = o.expandEnvironmentStrings('%AppData%');
          return appData.substring(0, appData.lastIndexOf('\\') + 1) + 'LOG_DIR_SUFFIX';
        }
        return '';
      }
      var textarea = document.getElementById('id_textareaLogHeader');
      var fso = new ActiveXObject('Scripting.FileSystemObject');
      var logHeaderPath = LogDir() + '\\LogHeader.txt';
      if (fso.FileExists(logHeaderPath)) {
        var tso = fso.OpenTextFile(logHeaderPath, 1);
        if (tso) {
          var text = tso.ReadAll();
          textarea.value = text;
        }
      }
      function action0()
      {
        var text = textarea.value;
        if (text) {
          var tso = fso.OpenTextFile(logHeaderPath, 2, true);
          tso.WriteLine(text);
          runApp('-addLogHeader');
        } else {
          runApp();
        }
      }
      function action1()
      {
        runApp();
      }
    </script>
    PLUGIN_SCRIPT_BLOCKS
  </body>
</html>
